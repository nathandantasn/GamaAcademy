let createServer,read,readFile,resolve;_eed‍.w("http",[["createServer",["createServer"],function(v){createServer=v}]]);_eed‍.w("fs",[["read",["read"],function(v){read=v}],["readFile",["readFile"],function(v){readFile=v}]]);_eed‍.w("path",[["resolve",["resolve"],function(v){resolve=v}]]);



const server = createServer((request, response) =>{
    switch(request.url){
        case '/status':{
            response.writeHead(200, {
                'Content-type': 'application.json',
            });
            response.write(JSON.stringify({
                status: 'Okay',
            }));
            response.end();
            break;
        }
        case '/sign-in': {
            const path = resolve(__dirname, './pages/sign-in.html');
            readFile(path, (error, file) => {
                if(error){
                    response.writeHead(500, "Can't process HTML file.");
                    response.end();
                    return;
                }
                response.writeHead(200);
                response.write(file);
                response.end();
            })
        }
        default: {
            response.writeHead(404, 'Service not found.');
            response.end();
        }
    }
});

const PORT = process.env.PORT ? parseInt(process.env.PORT) : 8000;
const HOSTNAME = process.env.HOSTNAME || '127.0.0.1';
server.listen(PORT, HOSTNAME, () => {
    console.log(`Server is listening at http://${HOSTNAME}: ${PORT}`);
});